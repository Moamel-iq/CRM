# Generated by Django 4.2.7 on 2023-11-01 08:02

import account.models
import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('sessions', '0001_initial'),
        ('account', '0002_user_name_user_phone_number_alter_user_email'),
    ]

    operations = [
        migrations.AlterModelManagers(
            name='user',
            managers=[
                ('objects', account.models.UserManager()),
            ],
        ),
        migrations.RemoveField(
            model_name='user',
            name='username',
        ),
        migrations.AddField(
            model_name='user',
            name='brand_logo',
            field=models.ImageField(blank=True, null=True, upload_to='images/brand_logo/', verbose_name='Brand Logo'),
        ),
        migrations.AddField(
            model_name='user',
            name='business',
            field=models.CharField(blank=True, help_text='Select your business type:', max_length=50, null=True, verbose_name='Business'),
        ),
        migrations.AddField(
            model_name='user',
            name='business_manager_name',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Business Manager Name'),
        ),
        migrations.AddField(
            model_name='user',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.AddField(
            model_name='user',
            name='defaultURL',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='ip_address',
            field=models.GenericIPAddressField(blank=True, help_text='IP Address', null=True, verbose_name='IP Address'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_accountant',
            field=models.BooleanField(default=False, help_text='Designates whether this user should be treated as accountant.', verbose_name='accountant'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_admin',
            field=models.BooleanField(default=False, help_text='Designates whether this user should be treated as admin.', verbose_name='admin'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_ceo',
            field=models.BooleanField(default=False, help_text='Designates whether this user should be treated as CEO.', verbose_name='ceo'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_customer',
            field=models.BooleanField(default=False, help_text='Designates whether this user should be treated as customer.', verbose_name='customer'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_employee',
            field=models.BooleanField(default=False, help_text='Designates whether this user should be treated as employee.', verbose_name='employee'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_founder',
            field=models.BooleanField(default=False, help_text='Designates whether this user should be treated as founder.', verbose_name='founder'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_hr',
            field=models.BooleanField(default=False, help_text='Designates whether this user should be treated as Human resources (HR).', verbose_name='hr'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_manager',
            field=models.BooleanField(default=False, help_text='Designates whether this user should be treated as manager.', verbose_name='manager'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_supplier',
            field=models.BooleanField(default=False, help_text='Designates whether this user should be treated as supplier.', verbose_name='supplier'),
        ),
        migrations.AddField(
            model_name='user',
            name='is_verified',
            field=models.BooleanField(default=False, help_text='Designates whether this user has been verified.Un-verified users cannot log in.', verbose_name='verified'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_activity',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Last activity'),
        ),
        migrations.AddField(
            model_name='user',
            name='organization_name',
            field=models.CharField(default=datetime.datetime(2023, 11, 1, 8, 2, 56, 202439, tzinfo=datetime.timezone.utc), max_length=50, verbose_name='Organization Name'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='user',
            name='otp',
            field=models.SmallIntegerField(blank=True, help_text='One Time Password', null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='otp_created_time',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='OTP created time'),
        ),
        migrations.AddField(
            model_name='user',
            name='password_changes_datatime',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Password changes datatime'),
        ),
        migrations.AddField(
            model_name='user',
            name='session',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sessions.session'),
        ),
        migrations.AddField(
            model_name='user',
            name='token',
            field=models.CharField(blank=True, editable=False, help_text='Token for authentication', max_length=100, null=True, unique=True, verbose_name='Token'),
        ),
    ]
